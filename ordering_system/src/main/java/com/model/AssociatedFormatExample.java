package com.model;

import java.util.ArrayList;
import java.util.List;

public class AssociatedFormatExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public AssociatedFormatExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFormatIdIsNull() {
            addCriterion("format_id is null");
            return (Criteria) this;
        }

        public Criteria andFormatIdIsNotNull() {
            addCriterion("format_id is not null");
            return (Criteria) this;
        }

        public Criteria andFormatIdEqualTo(Integer value) {
            addCriterion("format_id =", value, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdNotEqualTo(Integer value) {
            addCriterion("format_id <>", value, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdGreaterThan(Integer value) {
            addCriterion("format_id >", value, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("format_id >=", value, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdLessThan(Integer value) {
            addCriterion("format_id <", value, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdLessThanOrEqualTo(Integer value) {
            addCriterion("format_id <=", value, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdIn(List<Integer> values) {
            addCriterion("format_id in", values, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdNotIn(List<Integer> values) {
            addCriterion("format_id not in", values, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdBetween(Integer value1, Integer value2) {
            addCriterion("format_id between", value1, value2, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatIdNotBetween(Integer value1, Integer value2) {
            addCriterion("format_id not between", value1, value2, "formatId");
            return (Criteria) this;
        }

        public Criteria andFormatNameIsNull() {
            addCriterion("format_name is null");
            return (Criteria) this;
        }

        public Criteria andFormatNameIsNotNull() {
            addCriterion("format_name is not null");
            return (Criteria) this;
        }

        public Criteria andFormatNameEqualTo(String value) {
            addCriterion("format_name =", value, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameNotEqualTo(String value) {
            addCriterion("format_name <>", value, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameGreaterThan(String value) {
            addCriterion("format_name >", value, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameGreaterThanOrEqualTo(String value) {
            addCriterion("format_name >=", value, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameLessThan(String value) {
            addCriterion("format_name <", value, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameLessThanOrEqualTo(String value) {
            addCriterion("format_name <=", value, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameLike(String value) {
            addCriterion("format_name like", value, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameNotLike(String value) {
            addCriterion("format_name not like", value, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameIn(List<String> values) {
            addCriterion("format_name in", values, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameNotIn(List<String> values) {
            addCriterion("format_name not in", values, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameBetween(String value1, String value2) {
            addCriterion("format_name between", value1, value2, "formatName");
            return (Criteria) this;
        }

        public Criteria andFormatNameNotBetween(String value1, String value2) {
            addCriterion("format_name not between", value1, value2, "formatName");
            return (Criteria) this;
        }

        public Criteria andTopImgIsNull() {
            addCriterion("top_img is null");
            return (Criteria) this;
        }

        public Criteria andTopImgIsNotNull() {
            addCriterion("top_img is not null");
            return (Criteria) this;
        }

        public Criteria andTopImgEqualTo(String value) {
            addCriterion("top_img =", value, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgNotEqualTo(String value) {
            addCriterion("top_img <>", value, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgGreaterThan(String value) {
            addCriterion("top_img >", value, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgGreaterThanOrEqualTo(String value) {
            addCriterion("top_img >=", value, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgLessThan(String value) {
            addCriterion("top_img <", value, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgLessThanOrEqualTo(String value) {
            addCriterion("top_img <=", value, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgLike(String value) {
            addCriterion("top_img like", value, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgNotLike(String value) {
            addCriterion("top_img not like", value, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgIn(List<String> values) {
            addCriterion("top_img in", values, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgNotIn(List<String> values) {
            addCriterion("top_img not in", values, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgBetween(String value1, String value2) {
            addCriterion("top_img between", value1, value2, "topImg");
            return (Criteria) this;
        }

        public Criteria andTopImgNotBetween(String value1, String value2) {
            addCriterion("top_img not between", value1, value2, "topImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgIsNull() {
            addCriterion("bottom_img is null");
            return (Criteria) this;
        }

        public Criteria andBottomImgIsNotNull() {
            addCriterion("bottom_img is not null");
            return (Criteria) this;
        }

        public Criteria andBottomImgEqualTo(String value) {
            addCriterion("bottom_img =", value, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgNotEqualTo(String value) {
            addCriterion("bottom_img <>", value, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgGreaterThan(String value) {
            addCriterion("bottom_img >", value, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgGreaterThanOrEqualTo(String value) {
            addCriterion("bottom_img >=", value, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgLessThan(String value) {
            addCriterion("bottom_img <", value, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgLessThanOrEqualTo(String value) {
            addCriterion("bottom_img <=", value, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgLike(String value) {
            addCriterion("bottom_img like", value, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgNotLike(String value) {
            addCriterion("bottom_img not like", value, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgIn(List<String> values) {
            addCriterion("bottom_img in", values, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgNotIn(List<String> values) {
            addCriterion("bottom_img not in", values, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgBetween(String value1, String value2) {
            addCriterion("bottom_img between", value1, value2, "bottomImg");
            return (Criteria) this;
        }

        public Criteria andBottomImgNotBetween(String value1, String value2) {
            addCriterion("bottom_img not between", value1, value2, "bottomImg");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table associated_format
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table associated_format
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}