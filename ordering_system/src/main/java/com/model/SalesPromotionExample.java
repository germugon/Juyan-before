package com.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class SalesPromotionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public SalesPromotionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPromIdIsNull() {
            addCriterion("prom_id is null");
            return (Criteria) this;
        }

        public Criteria andPromIdIsNotNull() {
            addCriterion("prom_id is not null");
            return (Criteria) this;
        }

        public Criteria andPromIdEqualTo(Integer value) {
            addCriterion("prom_id =", value, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdNotEqualTo(Integer value) {
            addCriterion("prom_id <>", value, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdGreaterThan(Integer value) {
            addCriterion("prom_id >", value, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("prom_id >=", value, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdLessThan(Integer value) {
            addCriterion("prom_id <", value, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdLessThanOrEqualTo(Integer value) {
            addCriterion("prom_id <=", value, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdIn(List<Integer> values) {
            addCriterion("prom_id in", values, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdNotIn(List<Integer> values) {
            addCriterion("prom_id not in", values, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdBetween(Integer value1, Integer value2) {
            addCriterion("prom_id between", value1, value2, "promId");
            return (Criteria) this;
        }

        public Criteria andPromIdNotBetween(Integer value1, Integer value2) {
            addCriterion("prom_id not between", value1, value2, "promId");
            return (Criteria) this;
        }

        public Criteria andPromNameIsNull() {
            addCriterion("prom_name is null");
            return (Criteria) this;
        }

        public Criteria andPromNameIsNotNull() {
            addCriterion("prom_name is not null");
            return (Criteria) this;
        }

        public Criteria andPromNameEqualTo(String value) {
            addCriterion("prom_name =", value, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameNotEqualTo(String value) {
            addCriterion("prom_name <>", value, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameGreaterThan(String value) {
            addCriterion("prom_name >", value, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameGreaterThanOrEqualTo(String value) {
            addCriterion("prom_name >=", value, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameLessThan(String value) {
            addCriterion("prom_name <", value, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameLessThanOrEqualTo(String value) {
            addCriterion("prom_name <=", value, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameLike(String value) {
            addCriterion("prom_name like", value, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameNotLike(String value) {
            addCriterion("prom_name not like", value, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameIn(List<String> values) {
            addCriterion("prom_name in", values, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameNotIn(List<String> values) {
            addCriterion("prom_name not in", values, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameBetween(String value1, String value2) {
            addCriterion("prom_name between", value1, value2, "promName");
            return (Criteria) this;
        }

        public Criteria andPromNameNotBetween(String value1, String value2) {
            addCriterion("prom_name not between", value1, value2, "promName");
            return (Criteria) this;
        }

        public Criteria andSumIsNull() {
            addCriterion("sum is null");
            return (Criteria) this;
        }

        public Criteria andSumIsNotNull() {
            addCriterion("sum is not null");
            return (Criteria) this;
        }

        public Criteria andSumEqualTo(BigDecimal value) {
            addCriterion("sum =", value, "sum");
            return (Criteria) this;
        }

        public Criteria andSumNotEqualTo(BigDecimal value) {
            addCriterion("sum <>", value, "sum");
            return (Criteria) this;
        }

        public Criteria andSumGreaterThan(BigDecimal value) {
            addCriterion("sum >", value, "sum");
            return (Criteria) this;
        }

        public Criteria andSumGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("sum >=", value, "sum");
            return (Criteria) this;
        }

        public Criteria andSumLessThan(BigDecimal value) {
            addCriterion("sum <", value, "sum");
            return (Criteria) this;
        }

        public Criteria andSumLessThanOrEqualTo(BigDecimal value) {
            addCriterion("sum <=", value, "sum");
            return (Criteria) this;
        }

        public Criteria andSumIn(List<BigDecimal> values) {
            addCriterion("sum in", values, "sum");
            return (Criteria) this;
        }

        public Criteria andSumNotIn(List<BigDecimal> values) {
            addCriterion("sum not in", values, "sum");
            return (Criteria) this;
        }

        public Criteria andSumBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sum between", value1, value2, "sum");
            return (Criteria) this;
        }

        public Criteria andSumNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("sum not between", value1, value2, "sum");
            return (Criteria) this;
        }

        public Criteria andOffIsNull() {
            addCriterion("off is null");
            return (Criteria) this;
        }

        public Criteria andOffIsNotNull() {
            addCriterion("off is not null");
            return (Criteria) this;
        }

        public Criteria andOffEqualTo(BigDecimal value) {
            addCriterion("off =", value, "off");
            return (Criteria) this;
        }

        public Criteria andOffNotEqualTo(BigDecimal value) {
            addCriterion("off <>", value, "off");
            return (Criteria) this;
        }

        public Criteria andOffGreaterThan(BigDecimal value) {
            addCriterion("off >", value, "off");
            return (Criteria) this;
        }

        public Criteria andOffGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("off >=", value, "off");
            return (Criteria) this;
        }

        public Criteria andOffLessThan(BigDecimal value) {
            addCriterion("off <", value, "off");
            return (Criteria) this;
        }

        public Criteria andOffLessThanOrEqualTo(BigDecimal value) {
            addCriterion("off <=", value, "off");
            return (Criteria) this;
        }

        public Criteria andOffIn(List<BigDecimal> values) {
            addCriterion("off in", values, "off");
            return (Criteria) this;
        }

        public Criteria andOffNotIn(List<BigDecimal> values) {
            addCriterion("off not in", values, "off");
            return (Criteria) this;
        }

        public Criteria andOffBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("off between", value1, value2, "off");
            return (Criteria) this;
        }

        public Criteria andOffNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("off not between", value1, value2, "off");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sales_promotion
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sales_promotion
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}